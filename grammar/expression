expression -> literal | unary | binary | grouping;
literal    -> STRING | NUMBER | "true" | "false" | "nil";
grouping   -> "(" expression ")";
unary      -> ("!" | "-") expression;
binary     -> expression operator expression;
operator   -> "==" | "!=" | ">=" | "<=" | ">" | "<" | "+" | "-" | "*" | "/";



expression -> equality;
equality   -> comparison (("!=" | "==") comparison)*;
comparison -> term ((">" | ">=" | "<" | "<=" ) term)*;
term       -> factor (("-" | "+") factor)*;
factor     -> unary (("/" | "*") unary)*;
unary      -> ("!" | "-") unary | primary;
primary    -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" ;